---
export interface Props {
  showEmergencyBar?: boolean;
  currentPath?: string;
}

const { showEmergencyBar = false, currentPath = '' } = Astro.props;

// Function to check if a link is active
const isActive = (href: string) => {
  if (href === '/') {
    return currentPath === '/' || currentPath === '';
  }
  return currentPath.startsWith(href);
};
---

{showEmergencyBar && (
  <div class="bg-red-600 text-white py-2 text-center font-bold sticky top-0 z-50">
    ðŸ“ž Emergency Rental Available 24/7: <a href="tel:2536832288" class="underline">(253) 683-2288</a>
  </div>
)}

<header class={`bg-gray-900 text-white ${showEmergencyBar ? 'sticky top-8 z-40' : ''}`}>
  <nav class="container mx-auto px-4 py-4">
    <div class="flex justify-between items-center">
      <a href="/" class="flex items-center">
        <img src="/images/cctv-logo.svg" alt="CCTV Trailer - Mobile Surveillance Solutions Logo" class="h-12" />
      </a>
      
      <!-- Mobile menu button -->
      <button id="mobile-menu-btn" class="md:hidden flex flex-col justify-center items-center" aria-label="Toggle menu">
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
      </button>
      
      <!-- Desktop menu -->
      <div class="hidden md:flex gap-6">
        <a href="/" class={`hover:text-gray-300 ${isActive('/') && currentPath === '/' ? 'text-blue-400' : ''}`}>Home</a>
        <a href="/services" class={`hover:text-gray-300 ${isActive('/services') ? 'text-blue-400' : ''}`}>Services</a>
        <a href="/pricing" class={`hover:text-gray-300 ${isActive('/pricing') ? 'text-blue-400' : ''}`}>Pricing</a>
        <a href="/about" class={`hover:text-gray-300 ${isActive('/about') ? 'text-blue-400' : ''}`}>About</a>
        <a href="/faq" class={`hover:text-gray-300 ${isActive('/faq') ? 'text-blue-400' : ''}`}>FAQ</a>
        <a href="/blog" class={`hover:text-gray-300 ${isActive('/blog') ? 'text-blue-400' : ''}`}>Blog</a>
        <a href="/contact" class={`hover:text-gray-300 ${isActive('/contact') ? 'text-blue-400' : ''}`}>Contact</a>
      </div>
    </div>
    
    <!-- Mobile menu -->
    <div id="mobile-menu" class="mobile-menu">
      <a href="/" class={`mobile-menu-item ${isActive('/') && currentPath === '/' ? 'text-blue-400' : ''}`}>Home</a>
      <a href="/services" class={`mobile-menu-item ${isActive('/services') ? 'text-blue-400' : ''}`}>Services</a>
      <a href="/pricing" class={`mobile-menu-item ${isActive('/pricing') ? 'text-blue-400' : ''}`}>Pricing</a>
      <a href="/about" class={`mobile-menu-item ${isActive('/about') ? 'text-blue-400' : ''}`}>About</a>
      <a href="/faq" class={`mobile-menu-item ${isActive('/faq') ? 'text-blue-400' : ''}`}>FAQ</a>
      <a href="/blog" class={`mobile-menu-item ${isActive('/blog') ? 'text-blue-400' : ''}`}>Blog</a>
      <a href="/contact" class={`mobile-menu-item ${isActive('/contact') ? 'text-blue-400' : ''}`}>Contact</a>
    </div>
  </nav>
</header>

<style>
  .hamburger-line {
    width: 25px;
    height: 3px;
    background-color: white;
    margin: 3px 0;
    transition: 0.3s;
  }
  
  .mobile-menu {
    display: none;
    flex-direction: column;
    gap: 1rem;
    padding-top: 1rem;
    margin-top: 1rem;
    border-top: 1px solid rgba(255,255,255,0.1);
  }
  
  .mobile-menu.active {
    display: flex;
  }
  
  .mobile-menu-item {
    padding: 0.5rem 0;
    display: block;
    transition: color 0.2s;
  }
  
  .mobile-menu-item:hover {
    color: #9ca3af;
  }
  
  @media (min-width: 768px) {
    .mobile-menu {
      display: none !important;
    }
  }
</style>

<script>
  const mobileMenuBtn = document.getElementById('mobile-menu-btn');
  const mobileMenu = document.getElementById('mobile-menu');
  
  if (mobileMenuBtn && mobileMenu) {
    mobileMenuBtn.addEventListener('click', () => {
      mobileMenu.classList.toggle('active');
      
      // Animate hamburger to X
      const lines = mobileMenuBtn.querySelectorAll('.hamburger-line');
      if (mobileMenu.classList.contains('active')) {
        lines[0].style.transform = 'rotate(45deg) translateY(9px)';
        lines[1].style.opacity = '0';
        lines[2].style.transform = 'rotate(-45deg) translateY(-9px)';
      } else {
        lines[0].style.transform = 'none';
        lines[1].style.opacity = '1';
        lines[2].style.transform = 'none';
      }
    });
  }
</script>