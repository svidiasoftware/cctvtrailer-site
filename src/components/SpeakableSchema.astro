---
export interface SpeakableSchemaProps {
  sections?: Array<{
    id: string;
    title?: string;
    xpath?: string;
    cssSelector?: string;
  }>;
  contentUrl?: string;
}

const {
  sections = [],
  contentUrl = Astro.url.href
} = Astro.props as SpeakableSchemaProps;

// Generate speakable schema
const speakableSchema = sections.length > 0 ? {
  "@context": "https://schema.org",
  "@type": "WebPage",
  "url": contentUrl,
  "speakable": {
    "@type": "SpeakableSpecification",
    "xpath": sections
      .filter(s => s.xpath)
      .map(s => s.xpath),
    "cssSelector": sections
      .filter(s => s.cssSelector)
      .map(s => s.cssSelector)
  }
} : null;
---

{speakableSchema && (
  <script type="application/ld+json" set:html={JSON.stringify(speakableSchema)} />
)}